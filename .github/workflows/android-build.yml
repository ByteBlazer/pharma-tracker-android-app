name: Android CI

on:
  push:
    branches:
      - main
      - release
      - 'feature/**'   # matches feature/anything
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout source
        uses: actions/checkout@v4

      # Set up JDK 17 (required for modern Android Gradle)
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # Cache Gradle for faster builds
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Make gradlew executable
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Build the app
      - name: Build Debug APK
        run: ./gradlew assembleDebug

      # Rename APK based on branch
      - name: Rename APK
        run: |
          BRANCH="${{ github.ref_name }}"
          if [ "$BRANCH" == "main" ]; then
            NEW_NAME="production-app-debug.apk"
          elif [ "$BRANCH" == "release" ]; then
            NEW_NAME="test-app-debug.apk"
          elif [[ "$BRANCH" == feature/* ]]; then
            USERNAME=$(echo $BRANCH | cut -d'/' -f2)
            NEW_NAME="${USERNAME}-app-debug.apk"
          else
            NEW_NAME="unknown-app-debug.apk"
          fi
          echo "Renaming APK to $NEW_NAME"
          mv app/build/outputs/apk/debug/app-debug.apk $NEW_NAME
          echo "APK_NAME=$NEW_NAME" >> $GITHUB_ENV
   
      # Upload APK
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APK_NAME }}
          path: ${{ env.APK_NAME }}